/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.7 scene.gltf
Author: saulvhwoolf (https://sketchfab.com/saulvhwoolf)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/finalized-fba4a29d55a04de29f32bf922b528fe3
Title: finalized
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import {useFrame} from "@react-three/fiber";
import {DRACOLoader} from "three/examples/jsm/loaders/DRACOLoader";

export function TollBooth(props) {
  const { nodes, materials } = useGLTF('/tollbooth/scene.gltf', true)

  // const loader = new GLTFLoader()

  // const dLoader = new DRACOLoader();
  // dLoader.setDecoderPath('https://www.gstatic.com/draco/versioned/decoders/1.5.6/');
  // dLoader.setDecoderConfig({type:'js'})
  // gltf

  const groupRef = useRef(null)
  useFrame((state, delta) => {
    // @ts-ignore
    groupRef.current.rotation.z -= delta/3
  })
  return (
    <group {...props} dispose={null}>
      <group ref={groupRef} rotation={[-Math.PI / 2, 0, 0]} scale={[30,30,30]}>
        <mesh geometry={nodes.model_tex_u1_v1_0.geometry} material={materials.tex_u1_v1} />
        <mesh geometry={nodes.model_tex_u1_v1_0_1.geometry} material={materials.tex_u1_v1} />
        <mesh geometry={nodes.model_tex_u1_v1_0_2.geometry} material={materials.tex_u1_v1} />
        <mesh geometry={nodes.model_tex_u1_v1_0_3.geometry} material={materials.tex_u1_v1} />
        <mesh geometry={nodes.model_tex_u1_v1_0_4.geometry} material={materials.tex_u1_v1} />
        <mesh geometry={nodes.model_tex_u1_v1_0_5.geometry} material={materials.tex_u1_v1} />
        <mesh geometry={nodes.model_tex_u1_v1_0_6.geometry} material={materials.tex_u1_v1} />
        <mesh geometry={nodes.model_tex_u1_v1_0_7.geometry} material={materials.tex_u1_v1} />
        <mesh geometry={nodes.model_tex_u1_v1_0_8.geometry} material={materials.tex_u1_v1} />
        <mesh geometry={nodes.model_tex_u1_v1_0_9.geometry} material={materials.tex_u1_v1} />
        <mesh geometry={nodes.model_tex_u1_v1_0_10.geometry} material={materials.tex_u1_v1} />
        <mesh geometry={nodes.model_tex_u1_v1_0_11.geometry} material={materials.tex_u1_v1} />
      </group>
    </group>
  )
}

useGLTF.preload('/tollbooth/scene.gltf')
